{"version":3,"sources":["components/cell/Cell.jsx","components/field/Field.jsx","components/history/History.jsx","util/gameOverHandler.js","App.js","index.js","App.module.css"],"names":["Cell","winningCell","shapeType","onFieldClick","turn","position","isOver","getCellValueFromGameState","classes","s","cell","style","leftDiagonalCrossing","rightDiagonalCrossing","horizontalCrossing","verticalCrossing","className","onClick","cellValue","Field","winningState","setHistory","gameState","history","setTurn","setGameState","console","log","useState","setShapeType","getShapeId","shape","chooseShape","newGameState","numericValue","getValueFromNumericValue","cellArray","i","push","state","includes","wrapper","History","props","map","el","setWinningState","setIsOver","gameOverHandler","Math","abs","isGameOver","gameOverType","App","useEffect","endGame","type","value","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uLAmCeA,EAhCJ,SAAC,GAQO,IAPHC,EAOE,EAPFA,YACAC,EAME,EANFA,UACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,OACAC,EACE,EADFA,0BAERC,EAAUC,IAAEC,KAEZT,GAAqC,kBAAtBA,EAAYU,MAC3BH,EAAUA,EAAU,IAAMC,IAAEG,qBACrBX,GAAqC,mBAAtBA,EAAYU,MAClCH,EAAUA,EAAU,IAAMC,IAAEI,sBAErBZ,GAAqC,eAAtBA,EAAYU,MAClCH,EAAUA,EAAU,IAAMC,IAAEK,mBAErBb,GAAqC,aAAtBA,EAAYU,QAClCH,EAAUA,EAAU,IAAMC,IAAEM,kBAQhC,OAAO,qBAAKC,UAAWR,EAASS,QALd,WACTX,GAAWC,EAA0BF,IACtCF,EAAaC,EAAO,EAAGC,EAAUH,IAGlC,SACH,uBAAMc,UAAWP,IAAES,UAAnB,cAAgCX,EAA0BF,SCyBnDc,EArDH,SAAC,GAAyF,IAAxFC,EAAuF,EAAvFA,aAAchB,EAAyE,EAAzEA,KAAME,EAAmE,EAAnEA,OAAQe,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAC/EC,QAAQC,IAAIJ,GAiCZ,IAlCiG,MAEjEK,mBAAS,IAFwD,mBAE5F1B,EAF4F,KAEjF2B,EAFiF,KAQ7FC,EAAa,SAAC1B,GACd,OAAIA,EAAO,IAAO,EAAW,GAChB,GAEbD,EAAe,SAACC,EAAMC,EAAU0B,GAChCF,EAVc,SAACzB,GACf,OAAIA,EAAO,IAAM,EACN,IACG,IAOD4B,CAAY5B,IACzBoB,GAAQ,SAACpB,GAAD,OAAUA,EAAO,KACzB,IAAI6B,EAAY,YAAOX,GACvBW,EAAa5B,GAAYyB,EAAW1B,GACpCqB,EAAaQ,GACbP,QAAQC,IAAIM,EAAcF,GAC1BV,EAAW,GAAD,mBAAKE,GAAL,CAAc,CAACnB,KAAMA,EAAMkB,UAAWW,OAGhD1B,EAA4B,SAACF,GAS7B,OAR+B,SAAC6B,GAC5B,OAAqB,IAAjBA,EAA2B,KACJ,IAAlBA,EAA4B,IACzB,GAIJC,CADOb,EAAUjB,KAI7B+B,EAAY,GACPC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAAC,IAAD,EACxBD,EAAUE,KAAK,cAAC,EAAD,CAAMrC,aAAyB,OAAZmB,QAAY,IAAZA,GAAA,UAAAA,EAAcmB,aAAd,eAAqBC,SAASH,IAAKjB,EAAe,KAAMd,OAAQA,EAC7ED,SAAUgC,EAAGnC,UAAWA,EACxBC,aAAcA,EACdC,KAAMA,EACNiB,WAAYA,EACZC,UAAWA,EACXC,QAASA,EACTO,WAAYA,EACZvB,0BAA2BA,KAIpD,OAAO,mCACH,qBAAKS,UAAWP,IAAEgC,QAAlB,SACKL,OC3CEM,EAVD,SAACC,GAQX,OAPUA,EAAMpB,QAAQqB,KAAI,SAAAC,GAAE,OAAI,sBAAK5B,QAAS,WAC5CS,QAAQC,IAAIkB,EAAGzC,MACfuC,EAAMlB,aAAaoB,EAAGvB,WACtBqB,EAAMnB,QAAQqB,EAAGzC,MACjBuC,EAAMG,gBAAgB,IACtBH,EAAMI,WAAU,IALc,cAM7BF,EAAGzC,KAN0B,WCuBvB4C,EAxBO,SAAC1B,GAEnB,OAA6D,IAAzD2B,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IAC3C,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,aAAc4B,MAAO,CAAC,EAAG,EAAG,KACX,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IAClD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,aAAc4B,MAAO,CAAC,EAAG,EAAG,KACX,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACjD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,aAAc4B,MAAO,CAAC,EAAG,EAAG,KACZ,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACjD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,gBAAiB4B,MAAO,CAAC,EAAG,EAAG,KACf,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACjD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,iBAAkB4B,MAAO,CAAC,EAAG,EAAG,KAChB,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACjD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,WAAY4B,MAAO,CAAC,EAAG,EAAG,KACV,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACjD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,WAAY4B,MAAO,CAAC,EAAG,EAAG,KACV,IAAzDU,KAAKC,IAAI5B,EAAU,GAAKA,EAAU,GAAKA,EAAU,IACjD,CAAC6B,YAAY,EAAMC,aAAc,CAACzC,MAAO,WAAY4B,MAAO,CAAC,EAAG,EAAG,KAClEjB,EAAUkB,SAAS,GAGxB,CAACW,YAAY,GAFT,CAACA,YAAY,EAAMC,aAAc,CAACzC,MAAO,WAAY4B,MAAOjB,KCyB5D+B,EArCL,WAAO,IAAD,EACUzB,mBAAS,GADnB,mBACPxB,EADO,KACDoB,EADC,OAEgBI,mBAAS,CAAC,CAACxB,KAAM,EAAGkB,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAFrE,mBAEPC,EAFO,KAEEF,EAFF,OAGoBO,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAHtD,mBAGPN,EAHO,KAGIG,EAHJ,OAIcG,oBAAS,GAJvB,mBAIPtB,EAJO,KAICyC,EAJD,OAK0BnB,mBAAS,IALnC,mBAKPR,EALO,KAKO0B,EALP,KAQZQ,qBAAU,WACEN,EAAgB1B,GAAW6B,YAC3BI,EAAQP,EAAgB1B,GAAW8B,gBAExC,CAAC9B,IAIR,IAAIiC,EAAU,SAACnC,GACX0B,EAAgB1B,GAChB2B,GAAU,IAQd,OACI,gCACI,cAAC,EAAD,CAAO3B,aAAcA,EAAcd,OAAQA,EAAQiB,QAASA,EAASD,UAAWA,EACzED,WAAYA,EAAYjB,KAAMA,EAAMoB,QAASA,EAASC,aAAcA,IAC3E,uBAAO+B,KAAK,SAASC,MAAM,iBAAiBxC,QAV/B,WACjBQ,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtCD,EAAQ,GACRsB,EAAgB,IAChBC,GAAU,MAON,cAAC,EAAD,CAAStB,aAAcA,EAAcF,QAASA,EAASC,QAASA,EAASsB,gBAAiBA,EACjFC,UAAWA,IACnBzC,EAAS,iDAA4B,SCpClDoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,QAAU,qBAAqB,KAAO,kBAAkB,sBAAwB,mCAAmC,qBAAuB,kCAAkC,mBAAqB,gCAAgC,iBAAmB,8BAA8B,UAAY,0B","file":"static/js/main.f495499a.chunk.js","sourcesContent":["import s from \"../../App.module.css\";\nimport {useState} from \"react\";\n\nlet Cell = ({\n                winningCell,\n                shapeType,\n                onFieldClick,\n                turn,\n                position,\n                isOver,\n                getCellValueFromGameState\n            }) => {\n    let classes = s.cell\n\n    if (winningCell && winningCell.style === \"left-diagonal\") {\n        classes = classes + \" \" + s.leftDiagonalCrossing\n    } else if (winningCell && winningCell.style === \"right-diagonal\") {\n        classes = classes + \" \" + s.rightDiagonalCrossing\n\n    } else if (winningCell && winningCell.style === \"horizontal\") {\n        classes = classes + \" \" + s.horizontalCrossing\n\n    } else if (winningCell && winningCell.style === \"vertical\") {\n        classes = classes + \" \" + s.verticalCrossing\n\n    }\n    let onCellClick = () => {\n        if (!isOver && !getCellValueFromGameState(position)) {\n            onFieldClick(turn + 1, position, shapeType)\n        }\n    }\n    return <div className={classes} onClick={onCellClick}>\n        <span className={s.cellValue}> {getCellValueFromGameState(position)}</span>\n    </div>\n}\nexport default Cell","import s from \"../../App.module.css\";\nimport {useState} from \"react\";\nimport Cell from \"../cell/Cell\";\n\nlet Field = ({winningState, turn, isOver, setHistory, gameState, history, setTurn, setGameState}) => {\n    console.log(history)\n    let [shapeType, setShapeType] = useState(\"\")\n    let chooseShape = (turn) => {\n        if (turn % 2 !== 0) {\n            return \"O\"\n        } else return \"X\"\n    }\n    let getShapeId = (turn) => {\n        if (turn % 2  !== 0 ) return 1\n        else return -1\n    }\n    let onFieldClick = (turn, position, shape) => {\n        setShapeType(chooseShape(turn))\n        setTurn((turn) => turn + 1)\n        let newGameState = [...gameState]\n        newGameState[position] = getShapeId(turn)\n        setGameState(newGameState)\n        console.log(newGameState, shape)\n        setHistory([...history, {turn: turn, gameState: newGameState}])\n    }\n\n    let getCellValueFromGameState = (position) => {\n        let getValueFromNumericValue = (numericValue) => {\n            if (numericValue === 1) return \"X\"\n            else if (numericValue === -1) return \"0\"\n            else return \"\"\n\n        }\n        let numericValue = gameState[position]\n        let value = getValueFromNumericValue(numericValue)\n        return value;\n    }\n    let cellArray = []\n    for (let i = 0; i < 9; i++) {\n        cellArray.push(<Cell winningCell={winningState?.state?.includes(i) ? winningState : null} isOver={isOver}\n                             position={i} shapeType={shapeType}\n                             onFieldClick={onFieldClick}\n                             turn={turn}\n                             setHistory={setHistory}\n                             gameState={gameState}\n                             history={history}\n                             getShapeId={getShapeId}\n                             getCellValueFromGameState={getCellValueFromGameState}\n            />\n        )\n    }\n    return <>\n        <div className={s.wrapper}>\n            {cellArray}\n        </div>\n    </>\n}\nexport default Field","let History = (props) => {\n    let arr = props.history.map(el => <div onClick={() => {\n        console.log(el.turn)\n        props.setGameState(el.gameState)\n        props.setTurn(el.turn)\n        props.setWinningState({})\n        props.setIsOver(false)\n    }}> {el.turn} </div>)\n    return arr\n}\nexport default History","let gameOverHandler = (gameState) => {\n\n    if (Math.abs(gameState[0] + gameState[1] + gameState[2]) === 3) {\n       return {isGameOver: true, gameOverType: {style: \"horizontal\", state: [0, 1, 2]}, }\n    } else if (Math.abs(gameState[3] + gameState[4] + gameState[5]) === 3) {\n       return {isGameOver: true, gameOverType: {style: \"horizontal\", state: [3, 4, 5]}}\n    } else if (Math.abs(gameState[6] + gameState[7] + gameState[8]) === 3) {\n        return {isGameOver: true, gameOverType: {style: \"horizontal\", state: [6, 7, 8]}}\n    } else if (Math.abs(gameState[0] + gameState[4] + gameState[8]) === 3) {\n        return {isGameOver: true, gameOverType: {style: \"left-diagonal\", state: [0, 4, 8]}}\n    } else if (Math.abs(gameState[2] + gameState[4] + gameState[6]) === 3) {\n        return {isGameOver: true, gameOverType: {style: \"right-diagonal\", state: [2, 4, 6]}}\n    } else if (Math.abs(gameState[0] + gameState[3] + gameState[6]) === 3) {\n        return {isGameOver: true, gameOverType: {style: \"vertical\", state: [0, 3, 6]}}\n    } else if (Math.abs(gameState[1] + gameState[4] + gameState[7]) === 3) {\n        return {isGameOver: true, gameOverType: {style: \"vertical\", state: [1, 4, 7]}}\n    } else if (Math.abs(gameState[2] + gameState[5] + gameState[8]) === 3) {\n        return {isGameOver: true, gameOverType: {style: \"vertical\", state: [2, 5, 8]}}\n    } else if (!gameState.includes(0)) {\n        return {isGameOver: true, gameOverType: {style: \"no-moves\", state: gameState}}\n    }\n    return {isGameOver: false}\n}\n\nexport default gameOverHandler","import s from './App.module.css'\nimport {useEffect, useState} from \"react\";\nimport Field from \"./components/field/Field\";\nimport History from \"./components/history/History\";\nimport gameOverHandler from \"./util/gameOverHandler\";\n\n\nlet App = () => {\n    let [turn, setTurn] = useState(0)\n    let [history, setHistory] = useState([{turn: 0, gameState: [0, 0, 0, 0, 0, 0, 0, 0]}])\n    let [gameState, setGameState] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0])\n    let [isOver, setIsOver] = useState(false)\n    let [winningState, setWinningState] = useState({})\n\n\n    useEffect(() => {\n            if (gameOverHandler(gameState).isGameOver) {\n                endGame(gameOverHandler(gameState).gameOverType)\n            }\n        }, [gameState]\n    )\n\n\n    let endGame = (winningState) => {\n        setWinningState(winningState)\n        setIsOver(true)\n    }\n    let onStartNewGame = () => {\n        setGameState([0, 0, 0, 0, 0, 0, 0, 0, 0])\n        setTurn(0)\n        setWinningState({})\n        setIsOver(false)\n    }\n    return (\n        <div>\n            <Field winningState={winningState} isOver={isOver} history={history} gameState={gameState}\n                   setHistory={setHistory} turn={turn} setTurn={setTurn} setGameState={setGameState}/>\n            <input type=\"button\" value=\"Start new game\" onClick={onStartNewGame}/>\n            <History setGameState={setGameState} history={history} setTurn={setTurn} setWinningState={setWinningState}\n                     setIsOver={setIsOver}/>\n            {isOver ? <div> Game is over </div> : null}\n        </div>\n    )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"cell\":\"App_cell__2zBi9\",\"rightDiagonalCrossing\":\"App_rightDiagonalCrossing__8q4ak\",\"leftDiagonalCrossing\":\"App_leftDiagonalCrossing__31NYP\",\"horizontalCrossing\":\"App_horizontalCrossing__1c8kv\",\"verticalCrossing\":\"App_verticalCrossing__IZ-CV\",\"cellValue\":\"App_cellValue__3huY_\"};"],"sourceRoot":""}